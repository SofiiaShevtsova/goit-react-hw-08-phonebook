{"version":3,"file":"static/js/427.1323d487.chunk.js","mappings":"8KA4BA,IAzBgB,SAAAA,GACd,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,UAAC,KAAG,CAACC,EAAG,CAAC,IAAK,IAAK,KAAMC,EAAE,OAAM,WAC/B,SAAC,IAAO,CACNC,GAAG,KACHC,WAAW,iCACXC,OAAO,OACPC,SAAU,CAAEC,KAAM,OAAQC,GAAI,OAAQC,GAAI,QAAS,SAElDV,IAEFC,IAGP,C,yJCHMU,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KAAYG,KAAK,CACtBC,KAAM,QACNC,OAAQ,CAAEC,EAAG,OAAQC,EAAG,OACxBC,QAAS,oBACTL,KAAM,SAAAM,GACJ,MAAO,2BAA2BN,KAAKM,EACzC,IAGFC,SAAUV,EAAAA,KACPW,IAAI,EAAG,cACPC,IAAI,GAAI,eACRC,SAAS,cAgFd,UA7Ec,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAAC,IAAO,WACN,SAAC,KAAM,CACLC,cAAe,CACbd,MAAM,GACNQ,SAAU,IAEZO,iBAAkBlB,EAClBmB,SAAU,SAACC,EAAQC,GACjB,IAAMC,EAAO,CACXnB,MAAOiB,EAAOjB,MAAMoB,OACpBZ,SAAUS,EAAOT,SAASY,QAE5BR,GAASS,EAAAA,EAAAA,IAAUF,IACnBD,EAAQI,eAAc,GACtBJ,EAAQK,WACV,EAAE,SAED,SAAAtC,GAAK,OACJ,UAAC,KAAI,YACH,UAAC,IAAM,CACLuC,QAAS,EACTC,MAAM,aACNrC,EAAG,CAAC,IAAK,IAAK,KACdsC,GAAG,OAAM,WAET,UAAC,KAAW,YACV,SAAC,IAAS,CAACC,QAAQ,QAAO,oBAC1B,SAAC,EAAAC,EAAK,CACJtC,GAAIuC,EAAAA,GACJC,QAAQ,UACRC,iBAAiB,WACjBC,KAAK,QACL9B,KAAK,UAENjB,EAAMgD,OAAOjC,QACZ,SAAC,KAAgB,CAACkC,GAAG,WAAU,SAC5BjD,EAAMgD,OAAOjC,YAIpB,UAAC,KAAW,YACV,SAAC,IAAS,CAAC2B,QAAQ,WAAU,uBAC7B,SAAC,EAAAC,EAAK,CACJtC,GAAIuC,EAAAA,GACJC,QAAQ,UACRC,iBAAiB,WACjBC,KAAK,OACL9B,KAAK,aAENjB,EAAMgD,OAAOzB,WACZ,SAAC,KAAgB,CAAC0B,GAAG,WAAU,SAC5BjD,EAAMgD,OAAOzB,kBAMtB,SAAC,IAAM,CACLwB,KAAK,SACLG,YAAY,OACZC,UAAU,OACVC,OAAQ,CAAEC,GAAI,OAAQC,MAAO,SAAU,yBAIpC,OAMnB,C","sources":["components/Section/Section.jsx","pages/Login/Login.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Heading, Box } from '@chakra-ui/react';\r\n\r\nconst Section = props => {\r\n  const { title, children } = props;\r\n  return (\r\n    <Box w={[320, 420, 800]} p=\"20px\">\r\n      <Heading\r\n        as=\"h2\"\r\n        bgGradient=\"linear(to-l, #4FD1C5, #234E52)\"\r\n        bgClip=\"text\"\r\n        fontSize={{ base: '24px', md: '28px', lg: '36px' }}\r\n      >\r\n        {title}\r\n      </Heading>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.element),\r\n    PropTypes.element,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Input,\r\n  VStack,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n} from '@chakra-ui/react';\r\nimport { logInUser } from 'redux/operationPhonebook';\r\n\r\nimport Section from 'components/Section/Section';\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  email: Yup.mixed().test({\r\n    name: 'email',\r\n    params: { a: 'test', b: 'qwe' },\r\n    message: 'It is not a email',\r\n    test: value => {\r\n      return /\\w+[^\\s]\\w+@\\w+\\.\\w{1,5}/.test(value);\r\n    },\r\n  }),\r\n\r\n  password: Yup.string()\r\n    .min(2, 'Must min 2')\r\n    .max(25, 'Must max 25')\r\n    .required('Required'),\r\n});\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <Section>\r\n        <Formik\r\n          initialValues={{\r\n            email: ``,\r\n            password: '',\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={(values, actions) => {\r\n            const user = {\r\n              email: values.email.trim(),\r\n              password: values.password.trim(),\r\n            };\r\n            dispatch(logInUser(user));\r\n            actions.setSubmitting(false);\r\n            actions.resetForm();\r\n          }}\r\n        >\r\n          {props => (\r\n            <Form>\r\n              <VStack\r\n                spacing={6}\r\n                align=\"flex-start\"\r\n                w={[250, 400, 600]}\r\n                mx=\"auto\"\r\n              >\r\n                <FormControl>\r\n                  <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n                  <Input\r\n                    as={Field}\r\n                    variant=\"outline\"\r\n                    focusBorderColor=\"teal.400\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                  />\r\n                  {props.errors.email && (\r\n                    <FormErrorMessage id=\"feedback\">\r\n                      {props.errors.email}\r\n                    </FormErrorMessage>\r\n                  )}\r\n                </FormControl>\r\n                <FormControl>\r\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                  <Input\r\n                    as={Field}\r\n                    variant=\"outline\"\r\n                    focusBorderColor=\"teal.400\"\r\n                    type=\"text\"\r\n                    name=\"password\"\r\n                  />\r\n                  {props.errors.password && (\r\n                    <FormErrorMessage id=\"feedback\">\r\n                      {props.errors.password}\r\n                    </FormErrorMessage>\r\n                  )}\r\n                </FormControl>\r\n              </VStack>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                colorScheme=\"teal\"\r\n                marginTop=\"30px\"\r\n                _hover={{ bg: 'gray', color: 'white' }}\r\n              >\r\n                Log in...\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["props","title","children","w","p","as","bgGradient","bgClip","fontSize","base","md","lg","SignupSchema","Yup","shape","email","test","name","params","a","b","message","value","password","min","max","required","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","user","trim","logInUser","setSubmitting","resetForm","spacing","align","mx","htmlFor","I","Field","variant","focusBorderColor","type","errors","id","colorScheme","marginTop","_hover","bg","color"],"sourceRoot":""}