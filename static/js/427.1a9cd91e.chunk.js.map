{"version":3,"file":"static/js/427.1a9cd91e.chunk.js","mappings":"8KAsBA,IAlBgB,SAAAA,GACd,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,UAAC,KAAG,YACF,SAAC,IAAO,CAACC,GAAG,KAAKC,KAAK,MAAK,SAAEH,IAC5BC,IAGP,C,yJCGMG,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KAAYG,KAAK,CACtBC,KAAM,QACNC,OAAQ,CAAEC,EAAG,OAAQC,EAAG,OACxBC,QAAS,oBACTL,KAAM,SAAAM,GACJ,MAAO,2BAA2BN,KAAKM,EACzC,IAGFC,SAAUV,EAAAA,KACPW,IAAI,EAAG,cACPC,IAAI,GAAI,eACRC,SAAS,cA0Ed,UAvEc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAAC,IAAO,CAACpB,MAAO,YAAY,UAC1B,SAAC,KAAM,CACLqB,cAAe,CACbd,MAAM,GACNQ,SAAU,IAEZO,iBAAkBlB,EAClBmB,SAAU,SAACC,EAAQC,GACjB,IAAMC,EAAO,CACXnB,MAAOiB,EAAOjB,MAAMoB,OACpBZ,SAAUS,EAAOT,SAASY,QAE5BR,GAASS,EAAAA,EAAAA,IAAUF,IACnBD,EAAQI,eAAc,GACtBJ,EAAQK,WACV,EAAE,SAED,SAAA/B,GAAK,OACJ,UAAC,KAAI,YACH,UAAC,IAAM,CAACgC,QAAS,EAAGC,MAAM,aAAaC,EAAE,QAAO,WAC9C,UAAC,KAAW,YACV,SAAC,IAAS,CAACC,QAAQ,QAAO,oBAC1B,SAAC,EAAAC,EAAK,CACJjC,GAAIkC,EAAAA,GACJC,QAAQ,UACRC,iBAAiB,WACjBC,KAAK,QACL9B,KAAK,UAENV,EAAMyC,OAAOjC,QACZ,SAAC,KAAgB,CAACkC,GAAG,WAAU,SAC5B1C,EAAMyC,OAAOjC,YAIpB,UAAC,KAAW,YACV,SAAC,IAAS,CAAC2B,QAAQ,WAAU,uBAC7B,SAAC,EAAAC,EAAK,CACJjC,GAAIkC,EAAAA,GACJC,QAAQ,UACRC,iBAAiB,WACjBC,KAAK,OACL9B,KAAK,aAENV,EAAMyC,OAAOzB,WACZ,SAAC,KAAgB,CAAC0B,GAAG,WAAU,SAC5B1C,EAAMyC,OAAOzB,kBAMtB,SAAC,IAAM,CACLwB,KAAK,SACLG,YAAY,OACZC,OAAQ,CAAEC,GAAI,OAAQC,MAAO,SAAU,yBAIpC,OAMnB,C","sources":["components/Section/Section.jsx","pages/Login/Login.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Heading, Box  } from '@chakra-ui/react';\n\n\nconst Section = props => {\n  const { title, children } = props;\n  return (\n    <Box>\n      <Heading as='h2' size='2xl'>{title}</Heading >\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]),\n};\n\nexport default Section;\n","import { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport {\n  Button,\n  Input,\n  VStack,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n} from '@chakra-ui/react';\nimport { logInUser } from 'redux/operationPhonebook';\n\nimport Section from 'components/Section/Section';\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.mixed().test({\n    name: 'email',\n    params: { a: 'test', b: 'qwe' },\n    message: 'It is not a email',\n    test: value => {\n      return /\\w+[^\\s]\\w+@\\w+\\.\\w{1,5}/.test(value);\n    },\n  }),\n\n  password: Yup.string()\n    .min(2, 'Must min 2')\n    .max(25, 'Must max 25')\n    .required('Required'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Section title={'Log in...'}>\n        <Formik\n          initialValues={{\n            email: ``,\n            password: '',\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={(values, actions) => {\n            const user = {\n              email: values.email.trim(),\n              password: values.password.trim(),\n            };\n            dispatch(logInUser(user));\n            actions.setSubmitting(false);\n            actions.resetForm();\n          }}\n        >\n          {props => (\n            <Form>\n              <VStack spacing={6} align=\"flex-start\" w=\"400px\">\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  <Input\n                    as={Field}\n                    variant=\"outline\"\n                    focusBorderColor=\"teal.400\"\n                    type=\"email\"\n                    name=\"email\"\n                  />\n                  {props.errors.email && (\n                    <FormErrorMessage id=\"feedback\">\n                      {props.errors.email}\n                    </FormErrorMessage>\n                  )}\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Input\n                    as={Field}\n                    variant=\"outline\"\n                    focusBorderColor=\"teal.400\"\n                    type=\"text\"\n                    name=\"password\"\n                  />\n                  {props.errors.password && (\n                    <FormErrorMessage id=\"feedback\">\n                      {props.errors.password}\n                    </FormErrorMessage>\n                  )}\n                </FormControl>\n              </VStack>\n\n              <Button\n                type=\"submit\"\n                colorScheme=\"teal\"\n                _hover={{ bg: 'gray', color: 'white' }}\n              >\n                Log in...\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Section>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["props","title","children","as","size","SignupSchema","Yup","shape","email","test","name","params","a","b","message","value","password","min","max","required","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","user","trim","logInUser","setSubmitting","resetForm","spacing","align","w","htmlFor","I","Field","variant","focusBorderColor","type","errors","id","colorScheme","_hover","bg","color"],"sourceRoot":""}