{"version":3,"file":"static/js/427.b77ff2e7.chunk.js","mappings":"8NAiGA,EA7FkB,CAChBA,iBAAkBC,EAAAA,EAAAA,IAAU,4KAS5BC,aAAcD,EAAAA,EAAAA,GAAS,wGAMvBE,WAAWF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAY,2FAMvBI,aAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAa,2KAS1BM,SAAUN,EAAAA,EAAAA,OAAa,8SAevBO,kBAAmBP,EAAAA,EAAAA,IAAU,sFAM7BQ,oBAAqBR,EAAAA,EAAAA,GAAS,yS,uoCAe9BS,iBAAkBT,EAAAA,EAAAA,OAAa,yXAkB/BU,YAAaV,EAAAA,EAAAA,EAAQ,6G,wDCnEvB,IAlBgB,SAAAW,GACd,IAAQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,UAAC,KAAG,YACF,SAAC,IAAO,CAACC,GAAG,KAAKC,KAAK,MAAK,SAAEH,IAC5BC,IAGP,C,sGCJQX,EAAwDc,EAAAA,EAAAA,UAA7CZ,EAA6CY,EAAAA,EAAAA,YAAhCV,EAAgCU,EAAAA,EAAAA,SAAtBT,EAAsBS,EAAAA,EAAAA,kBAE1DC,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KAAYG,KAAK,CACtBC,KAAM,QACNC,OAAQ,CAAEC,EAAG,OAAQC,EAAG,OACxBC,QAAS,oBACTL,KAAM,SAAAM,GACJ,MAAO,2BAA2BN,KAAKM,EACzC,IAGFC,SAAUV,EAAAA,KACPW,IAAI,EAAG,cACPC,IAAI,GAAI,eACRC,SAAS,cAiDd,UA9Cc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAAC,IAAO,CAACrB,MAAO,YAAY,UAC1B,SAAC,KAAM,CACLsB,cAAe,CACbd,MAAM,GACNQ,SAAU,IAEZO,iBAAkBlB,EAClBmB,SAAU,SAACC,EAAQC,GACjB,IAAMC,EAAO,CACXnB,MAAOiB,EAAOjB,MAAMoB,OACpBZ,SAAUS,EAAOT,SAASY,QAE5BR,GAASS,EAAAA,EAAAA,IAAUF,IACnBD,EAAQI,eAAc,GACtBJ,EAAQK,WACV,EAAE,SAED,SAAAhC,GAAK,OACJ,UAACT,EAAS,YACR,kBAAO0C,QAAQ,QAAO,oBACtB,SAACxC,EAAW,CAACyC,KAAK,QAAQvB,KAAK,UAC9BX,EAAMmC,OAAO1B,QACZ,SAACb,EAAiB,CAACwC,GAAG,WAAU,SAC7BpC,EAAMmC,OAAO1B,SAGlB,kBAAOwB,QAAQ,WAAU,uBACzB,SAACxC,EAAW,CAACyC,KAAK,OAAOvB,KAAK,aAC7BX,EAAMmC,OAAOlB,WACZ,SAACrB,EAAiB,CAACwC,GAAG,WAAU,SAC7BpC,EAAMmC,OAAOlB,YAGlB,SAACtB,EAAQ,CAACuC,KAAK,SAAQ,yBACb,OAMxB,C","sources":["components/ComponentStyles/PhonebookStyles.js","components/Section/Section.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport photo from 'image/contact.jpg';\n\nconst StyleList = {\n  SectionContainer: styled.div`\n    width: 600px;\n    padding: 20px;\n    background-color: rgb(230, 154, 92);\n    font-size: 24px;\n    color: black;\n    font-weight: bold;\n  `,\n\n  SectionTitle: styled.h2`\n    font-size: 32px;\n    margin-bottom: 20px;\n    color: rgb(150, 50, 50);\n  `,\n\n  FormStyle: styled(Form)`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  `,\n\n  FieldStyles: styled(Field)`\n    width: 50%;\n    font-size: 20px;\n    border-radius: 5px;\n    border: 2px solid brown;\n    background-color: bisque;\n    padding: 10px;\n  `,\n\n  BtnStyle: styled.button`\n    width: 30%;\n    font-size: 20px;\n    border-radius: 5px;\n    border: 2px solid brown;\n    background-color: rgb(240, 103, 69);\n    color: brown;\n    padding: 10px;\n    &:hover {\n      background-color: brown;\n      color: bisque;\n      font-weight: 600;\n    }\n  `,\n\n  ErrorMessageStyle: styled.div`\n    display: block;\n    color: red;\n    font-size: 16px;\n  `,\n\n  ListOfContactsStyle: styled.ul`\n    list-style: url('${photo}');\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    gap: 10px;\n    margin-top: 30px;\n    padding-left: 50px;\n    font-size: 28px;\n    & > li {\n      padding-left: 10px;\n    }\n  `,\n\n  BtnDeleteContact: styled.button`\n    display: inline-block;\n    margin-left: 20px;\n    font-size: 16px;\n    border-radius: 5px;\n    border: 2px solid brown;\n    background-color: rgb(240, 103, 69);\n    color: brown;\n    padding: 5px;\n    position: relative;\n    top: -5px;\n    &:hover {\n      background-color: brown;\n      color: bisque;\n      font-weight: 600;\n    }\n  `,\n\n  IsEmptyList: styled.p`\n    display: block;\n    color: red;\n    font-size: 16px;\n    margin-top: 30px;\n  `,\n};\n\nexport default StyleList;\n","import PropTypes from 'prop-types';\nimport { Heading, Box  } from '@chakra-ui/react';\n\n\nconst Section = props => {\n  const { title, children } = props;\n  return (\n    <Box>\n      <Heading as='h2' size='2xl'>{title}</Heading >\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]),\n};\n\nexport default Section;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/operationPhonebook';\nimport StyleList from 'components/ComponentStyles/PhonebookStyles';\n\nimport Section from 'components/Section/Section';\n\nconst { FormStyle, FieldStyles, BtnStyle, ErrorMessageStyle } = StyleList;\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.mixed().test({\n    name: 'email',\n    params: { a: 'test', b: 'qwe' },\n    message: 'It is not a email',\n    test: value => {\n      return /\\w+[^\\s]\\w+@\\w+\\.\\w{1,5}/.test(value);\n    },\n  }),\n\n  password: Yup.string()\n    .min(2, 'Must min 2')\n    .max(25, 'Must max 25')\n    .required('Required'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Section title={'Log in...'}>\n        <Formik\n          initialValues={{\n            email: ``,\n            password: '',\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={(values, actions) => {\n            const user = {\n              email: values.email.trim(),\n              password: values.password.trim(),\n            };\n            dispatch(logInUser(user));\n            actions.setSubmitting(false);\n            actions.resetForm();\n          }}\n        >\n          {props => (\n            <FormStyle>\n              <label htmlFor=\"email\">Email</label>\n              <FieldStyles type=\"email\" name=\"email\" />\n              {props.errors.email && (\n                <ErrorMessageStyle id=\"feedback\">\n                  {props.errors.email}\n                </ErrorMessageStyle>\n              )}\n              <label htmlFor=\"password\">Password</label>\n              <FieldStyles type=\"text\" name=\"password\" />\n              {props.errors.password && (\n                <ErrorMessageStyle id=\"feedback\">\n                  {props.errors.password}\n                </ErrorMessageStyle>\n              )}\n              <BtnStyle type=\"submit\">Log in...</BtnStyle>\n            </FormStyle>\n          )}\n        </Formik>\n      </Section>\n    </>\n  );\n};\n\nexport default Login;"],"names":["SectionContainer","styled","SectionTitle","FormStyle","Form","FieldStyles","Field","BtnStyle","ErrorMessageStyle","ListOfContactsStyle","BtnDeleteContact","IsEmptyList","props","title","children","as","size","StyleList","SignupSchema","Yup","shape","email","test","name","params","a","b","message","value","password","min","max","required","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","user","trim","logInUser","setSubmitting","resetForm","htmlFor","type","errors","id"],"sourceRoot":""}