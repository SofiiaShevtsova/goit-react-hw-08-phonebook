{"version":3,"file":"static/js/929.093b5925.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","../node_modules/@chakra-ui/layout/dist/chunk-YTV6DHKL.mjs","../node_modules/@chakra-ui/icons/dist/chunk-C7CK4LUU.mjs","pages/StartPage/StartPage.jsx","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/index.mjs","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Heading, Box } from '@chakra-ui/react';\n\nconst Section = props => {\n  const { title, children } = props;\n  return (\n    <Box w={[320, 420, 800]} p=\"20px\">\n      <Heading\n        as=\"h2\"\n        bgGradient=\"linear(to-l, #4FD1C5, #234E52)\"\n        bgClip=\"text\"\n        fontSize={{ base: '24px', md: '28px', lg: '36px' }}\n      >\n        {title}\n      </Heading>\n      {children}\n    </Box>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]),\n};\n\nexport default Section;\n","// src/link.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport {\n  Link\n};\n","// src/ExternalLink.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ExternalLinkIcon = createIcon({\n  displayName: \"ExternalLinkIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"none\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeWidth: \"2\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M15 3h6v6\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M10 14L21 3\" })\n  ] })\n});\n\nexport {\n  ExternalLinkIcon\n};\n","import { Link as ReachLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { List, ListItem, Link, Text } from '@chakra-ui/react';\nimport { ExternalLinkIcon } from '@chakra-ui/icons';\nimport Section from 'components/Section/Section';\n\nconst StartPage = () => {\n  const userState = useSelector(state => state.phonebook.user);\n\n  return (\n    <>\n      {userState ? (\n        <Section\n          title={`Hello ${userState.charAt(0).toUpperCase()}${userState.slice(\n            1\n          )}!`}\n        ></Section>\n      ) : (\n        <Section title={'Welcome to website!'}>\n          <List spacing={3} marginTop=\"50px\">\n            <ListItem>\n              <Text fontSize={{ base: '16px', sm: '24px', lg: '28px' }}>\n                If you are registered,\n                <Link as={ReachLink} to=\"/login\" color=\"teal.500\">\n                  Log in\n                  <ExternalLinkIcon mx=\"5px\" />\n                </Link>\n              </Text>\n            </ListItem>\n            <ListItem>\n              <Text fontSize={{ base: '16px', sm: '24px', lg: '32px' }}>\n                If you are not registered, you need to{' '}\n                <Link as={ReachLink} to=\"/register\" color=\"teal.500\">\n                  Register\n                  <ExternalLinkIcon mx=\"5px\" />\n                </Link>\n              </Text>\n            </ListItem>\n          </List>\n        </Section>\n      )}\n    </>\n  );\n};\nexport default StartPage;\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/index.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\nfunction pick(object, keysToPick) {\n  const result = {};\n  for (const key of keysToPick) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\nexport {\n  compact,\n  omit,\n  pick,\n  split\n};\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n"],"names":["props","title","children","w","p","as","bgGradient","bgClip","fontSize","base","md","lg","Link","forwardRef","ref","styles","useStyleConfig","omitThemingProps","className","isExternal","rest","jsx","chakra","target","rel","cx","__css","displayName","ExternalLinkIcon","createIcon","path","jsxs","fill","stroke","strokeLinecap","strokeWidth","d","userState","useSelector","state","phonebook","user","Section","charAt","toUpperCase","slice","spacing","marginTop","sm","ReachLink","to","color","mx","Heading","Text","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","createContext","name","errorMessage","ListStylesProvider","useListStyles","List","useMultiStyleConfig","styleType","stylePosition","validChildren","getValidChildren","spacingStyle","mt","value","listStyleType","listStylePosition","role","container","marginStart","ListItem","item","ListIcon","Icon","icon"],"sourceRoot":""}